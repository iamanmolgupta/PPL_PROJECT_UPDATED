{"ast":null,"code":"import _defineProperty from \"/home/anmol/ANMOL_DATA/git_hub-master/Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Axios from \"axios\";\n\nconst callApi = options => {\n  return new Promise((resolve, rej) => {\n    Axios(_objectSpread({}, options)).then(response => {\n      resolve(response);\n    }).catch(err => {\n      rej(err);\n    });\n  });\n};\n\nmodule.exports = {\n  callApi\n};","map":{"version":3,"sources":["/home/anmol/ANMOL_DATA/git_hub-master/Frontend/src/utility/util.js"],"names":["Axios","callApi","options","Promise","resolve","rej","then","response","catch","err","module","exports"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,OAAD,IAAW;AACvB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,GAAT,KAAe;AAClCL,IAAAA,KAAK,mBAAKE,OAAL,EAAL,CAAoBI,IAApB,CAAyBC,QAAQ,IAAE;AAC/BH,MAAAA,OAAO,CAACG,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAESC,GAAG,IAAE;AACVJ,MAAAA,GAAG,CAACI,GAAD,CAAH;AACH,KAJD;AAKC,GANM,CAAP;AAOH,CARD;;AAUAC,MAAM,CAACC,OAAP,GAAiB;AAAEV,EAAAA;AAAF,CAAjB","sourcesContent":["import Axios from \"axios\"\n\nconst callApi = (options)=>{\n    return new Promise((resolve,rej)=>{\n    Axios({...options}).then(response=>{\n        resolve(response);\n    }).catch(err=>{\n        rej(err);\n    })\n    })\n}\n\nmodule.exports = { callApi }"]},"metadata":{},"sourceType":"module"}