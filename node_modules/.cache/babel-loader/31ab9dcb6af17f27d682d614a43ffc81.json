{"ast":null,"code":"import _defineProperty from \"/home/anmol/ANMOL_DATA/git_hub-master/Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Axios from \"axios\";\nconst baseUrl = \"http://localhost:8080\";\n\nconst callApi = options => {\n  return new Promise((resolve, rej) => {\n    let option = _objectSpread({}, options);\n\n    option.url = \"baseUrl/$\";\n    Axios(_objectSpread({}, options)).then(response => {\n      resolve(response);\n    }).catch(err => {\n      rej(err);\n    });\n  });\n};\n\nexport default callApi;","map":{"version":3,"sources":["/home/anmol/ANMOL_DATA/git_hub-master/Frontend/src/utility/util.js"],"names":["Axios","baseUrl","callApi","options","Promise","resolve","rej","option","url","then","response","catch","err"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;;AACA,MAAMC,OAAO,GAAIC,OAAD,IAAW;AACvB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,GAAT,KAAe;AAC9B,QAAIC,MAAM,qBAAOJ,OAAP,CAAV;;AACAI,IAAAA,MAAM,CAACC,GAAP;AACJR,IAAAA,KAAK,mBAAKG,OAAL,EAAL,CAAoBM,IAApB,CAAyBC,QAAQ,IAAE;AAC/BL,MAAAA,OAAO,CAACK,QAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAESC,GAAG,IAAE;AACVN,MAAAA,GAAG,CAACM,GAAD,CAAH;AACH,KAJD;AAKC,GARM,CAAP;AASH,CAVD;;AAYA,eAAeV,OAAf","sourcesContent":["import Axios from \"axios\"\n\nconst baseUrl = \"http://localhost:8080\";\nconst callApi = (options)=>{\n    return new Promise((resolve,rej)=>{\n        let option = {...options};\n        option.url = `baseUrl/$`\n    Axios({...options}).then(response=>{\n        resolve(response);\n    }).catch(err=>{\n        rej(err);\n    })\n    })\n}\n\nexport default callApi"]},"metadata":{},"sourceType":"module"}